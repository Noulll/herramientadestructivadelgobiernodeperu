-- F3xploit by Noul
-- why are you reading this Mr.Skid?

local F3x = Instance.new("ScreenGui")
local Btools = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UIStroke = Instance.new("UIStroke")
local Logo = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local ImageLabel_2 = Instance.new("ImageLabel")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local ImageLabel_3 = Instance.new("ImageLabel")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local Open = Instance.new("TextButton")
local UIStroke_2 = Instance.new("UIStroke")
local UICorner_2 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local Main = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local TextLabel_2 = Instance.new("TextLabel")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextButton_2 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local TextButton_3 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local TextButton_4 = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local TextButton_5 = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local TextButton_6 = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local TextButton_7 = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local TextButton_8 = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local TextLabel_5 = Instance.new("TextLabel")
local TextButton_9 = Instance.new("TextButton")
local UICorner_11 = Instance.new("UICorner")
local _1 = Instance.new("TextButton")
local UICorner_12 = Instance.new("UICorner")
local TextButton_10 = Instance.new("TextButton")
local UICorner_13 = Instance.new("UICorner")
local TextButton_11 = Instance.new("TextButton")
local UICorner_14 = Instance.new("UICorner")
local TextLabel_6 = Instance.new("TextLabel")
local TextLabel_7 = Instance.new("TextLabel")
local TextButton_12 = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local TextButton_13 = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local TextButton_14 = Instance.new("TextButton")
local UICorner_17 = Instance.new("UICorner")
local Box = Instance.new("TextBox")
local UICorner_18 = Instance.new("UICorner")
local TextButton_15 = Instance.new("TextButton")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
local UICorner_19 = Instance.new("UICorner")
local TextButton_16 = Instance.new("TextButton")
local UICorner_20 = Instance.new("UICorner")
local TextButton_17 = Instance.new("TextButton")
local UICorner_21 = Instance.new("UICorner")
local TextLabel_8 = Instance.new("TextLabel")
local TextButton_18 = Instance.new("TextButton")
local UICorner_22 = Instance.new("UICorner")
local TextButton_19 = Instance.new("TextButton")
local UICorner_23 = Instance.new("UICorner")
local TextButton_20 = Instance.new("TextButton")
local UICorner_24 = Instance.new("UICorner")
local TextButton_21 = Instance.new("TextButton")
local UICorner_25 = Instance.new("UICorner")
local TextButton_22 = Instance.new("TextButton")
local UICorner_26 = Instance.new("UICorner")
local TextButton_23 = Instance.new("TextButton")
local UICorner_27 = Instance.new("UICorner")
local TextButton_24 = Instance.new("TextButton")
local UICorner_28 = Instance.new("UICorner")
local TextButton_25 = Instance.new("TextButton")
local UICorner_29 = Instance.new("UICorner")
local TextButton_26 = Instance.new("TextButton")
local UICorner_30 = Instance.new("UICorner")
local TextButton_27 = Instance.new("TextButton")
local UICorner_31 = Instance.new("UICorner")
local TextButton_28 = Instance.new("TextButton")
local UICorner_32 = Instance.new("UICorner")
local Namee = Instance.new("TextBox")
local UICorner_33 = Instance.new("UICorner")
local TextButton_29 = Instance.new("TextButton")
local UICorner_34 = Instance.new("UICorner")
local TextButton_30 = Instance.new("TextButton")
local UICorner_35 = Instance.new("UICorner")
local TextButton_31 = Instance.new("TextButton")
local UICorner_36 = Instance.new("UICorner")
local Pitch = Instance.new("TextBox")
local UICorner_37 = Instance.new("UICorner")
local TextButton_32 = Instance.new("TextButton")
local UICorner_38 = Instance.new("UICorner")
local team = Instance.new("TextBox")
local UICorner_39 = Instance.new("UICorner")
local TextButton_33 = Instance.new("TextButton")
local UICorner_40 = Instance.new("UICorner")
local TextButton_34 = Instance.new("TextButton")
local UICorner_41 = Instance.new("UICorner")
local TextButton_35 = Instance.new("TextButton")
local UICorner_42 = Instance.new("UICorner")
local TextLabel_9 = Instance.new("TextLabel")
local UICorner_43 = Instance.new("UICorner")
local UIStroke_3 = Instance.new("UIStroke")
local TextButton_36 = Instance.new("TextButton")
local TextLabel_10 = Instance.new("TextLabel")

--Properties:

F3x.Name = "F3x"
F3x.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
F3x.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
F3x.ResetOnSpawn = false

Btools.Name = "Btools"
Btools.Parent = F3x
Btools.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Btools.BorderColor3 = Color3.fromRGB(255, 0, 0)
Btools.BorderSizePixel = 0
Btools.Position = UDim2.new(-0.0753756315, 0, 0.669824779, 0)
Btools.Size = UDim2.new(0.0746636987, 0, 0.0516552478, 0)
Btools.AutoButtonColor = false
Btools.Font = Enum.Font.Roboto
Btools.Text = "Get btools (HD admin)"
Btools.TextColor3 = Color3.fromRGB(255, 255, 255)
Btools.TextScaled = true
Btools.TextSize = 27.000
Btools.TextWrapped = true

UICorner.CornerRadius = UDim.new(0, 3)
UICorner.Parent = Btools

UIStroke.Parent = Btools
UIStroke.Color = Color3.fromRGB(185, 0, 0)
UIStroke.Thickness = 1.500
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

Logo.Name = "Logo"
Logo.Parent = F3x
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1.000
Logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(-0.127000004, 0, 0.407999992, 0)
Logo.Size = UDim2.new(0.098739177, 0, 0.197578743, 0)

ImageLabel.Parent = Logo
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.218442246, 0, 0.155642867, 0)
ImageLabel.Size = UDim2.new(0.712497175, 0, 0.673606992, 0)
ImageLabel.ZIndex = 645545645
ImageLabel.Image = "rbxassetid://18582338072"

UIAspectRatioConstraint.Parent = ImageLabel
UIAspectRatioConstraint.AspectRatio = 0.987

ImageLabel_2.Parent = ImageLabel
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.Position = UDim2.new(-0.133318976, 0, -0.128317893, 0)
ImageLabel_2.Size = UDim2.new(1.27191746, 0, 1.24462724, 0)
ImageLabel_2.Image = "http://www.roblox.com/asset/?id=7102118272"

UIAspectRatioConstraint_2.Parent = ImageLabel_2

ImageLabel_3.Parent = ImageLabel_2
ImageLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_3.BackgroundTransparency = 1.000
ImageLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_3.BorderSizePixel = 0
ImageLabel_3.Position = UDim2.new(0.349781007, 0, -0.170502707, 0)
ImageLabel_3.Size = UDim2.new(0.297666639, 0, 0.331225544, 0)
ImageLabel_3.Image = "rbxassetid://15655755917"

UIAspectRatioConstraint_3.Parent = ImageLabel_3

UIAspectRatioConstraint_4.Parent = Logo

Open.Name = "Open"
Open.Parent = F3x
Open.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Open.BorderColor3 = Color3.fromRGB(255, 0, 0)
Open.BorderSizePixel = 0
Open.Position = UDim2.new(-0.0753756315, 0, 0.603331983, 0)
Open.Size = UDim2.new(0.0746636987, 0, 0.0516552478, 0)
Open.AutoButtonColor = false
Open.Font = Enum.Font.Roboto
Open.Text = "Open gui"
Open.TextColor3 = Color3.fromRGB(255, 255, 255)
Open.TextScaled = true
Open.TextSize = 27.000
Open.TextWrapped = true

UIStroke_2.Parent = Open
UIStroke_2.Color = Color3.fromRGB(185, 0, 0)
UIStroke_2.Thickness = 1.500
UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

UICorner_2.CornerRadius = UDim.new(0, 3)
UICorner_2.Parent = Open

TextLabel.Parent = F3x
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.117862374, 0, 1, 0)
TextLabel.Size = UDim2.new(0.0959004387, 0, 0.0560625829, 0)
TextLabel.Font = Enum.Font.Roboto
TextLabel.Text = "F3xploit"
TextLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

Main.Name = "Main"
Main.Parent = F3x
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Main.BorderColor3 = Color3.fromRGB(255, 0, 0)
Main.BorderSizePixel = 0
Main.ClipsDescendants = true
Main.Position = UDim2.new(0.3550511, 0, 0.366555989, 0)
Main.Size = UDim2.new(0.275025457, 0, 0.302404612, 0)
Main.Visible = false

ScrollingFrame.Parent = Main
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.00798541773, 0, 0.137355492, 0)
ScrollingFrame.Size = UDim2.new(0.991351008, 0, 0.862644911, 0)
ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
ScrollingFrame.CanvasPosition = Vector2.new(0, 150)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
ScrollingFrame.ScrollBarThickness = 2

TextLabel_2.Parent = ScrollingFrame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.837729037, 0, -0.051734753, 0)
TextLabel_2.Size = UDim2.new(0.124489389, 0, 0.0240595974, 0)
TextLabel_2.Font = Enum.Font.Roboto
TextLabel_2.Text = "Sky"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 43.000
TextLabel_2.TextWrapped = true
TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left

TextLabel_3.Parent = TextLabel_2
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(-6.52178383, 0, 2.19555068, 0)
TextLabel_3.Size = UDim2.new(4.99825478, 0, 0.802068532, 0)
TextLabel_3.Font = Enum.Font.Roboto
TextLabel_3.Text = "Sky (Bugged)"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 43.000
TextLabel_3.TextWrapped = true
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

TextLabel_4.Parent = ScrollingFrame
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(0.0167456251, 0, 0.12878637, 0)
TextLabel_4.Size = UDim2.new(0.124489389, 0, 0.0240595974, 0)
TextLabel_4.Font = Enum.Font.Roboto
TextLabel_4.Text = "Decal"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 43.000
TextLabel_4.TextWrapped = true

TextButton.Parent = ScrollingFrame
TextButton.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.676373899, 0, 0.0296521038, 0)
TextButton.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton.AutoButtonColor = false
TextButton.Font = Enum.Font.Gotham
TextButton.Text = "Logo Skybox"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 35.000
TextButton.TextWrapped = true

UICorner_3.CornerRadius = UDim.new(0, 3)
UICorner_3.Parent = TextButton

TextButton_2.Parent = ScrollingFrame
TextButton_2.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_2.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.34790203, 0, 0.0296675172, 0)
TextButton_2.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_2.AutoButtonColor = false
TextButton_2.Font = Enum.Font.Gotham
TextButton_2.Text = "Furry Skybox"
TextButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.TextScaled = true
TextButton_2.TextSize = 35.000
TextButton_2.TextWrapped = true

UICorner_4.CornerRadius = UDim.new(0, 3)
UICorner_4.Parent = TextButton_2

TextButton_3.Parent = ScrollingFrame
TextButton_3.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_3.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_3.BorderSizePixel = 0
TextButton_3.Position = UDim2.new(0.0181404147, 0, 0.591857553, 0)
TextButton_3.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_3.AutoButtonColor = false
TextButton_3.Font = Enum.Font.Gotham
TextButton_3.Text = "Name all got destroyed lol"
TextButton_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.TextScaled = true
TextButton_3.TextSize = 35.000
TextButton_3.TextWrapped = true

UICorner_5.CornerRadius = UDim.new(0, 3)
UICorner_5.Parent = TextButton_3

TextButton_4.Parent = ScrollingFrame
TextButton_4.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_4.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_4.BorderSizePixel = 0
TextButton_4.Position = UDim2.new(0.349190146, 0, 0.0801565647, 0)
TextButton_4.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_4.AutoButtonColor = false
TextButton_4.Font = Enum.Font.Gotham
TextButton_4.Text = "Idk Skybox"
TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_4.TextScaled = true
TextButton_4.TextSize = 35.000
TextButton_4.TextWrapped = true

UICorner_6.CornerRadius = UDim.new(0, 3)
UICorner_6.Parent = TextButton_4

TextButton_5.Parent = ScrollingFrame
TextButton_5.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_5.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_5.BorderSizePixel = 0
TextButton_5.Position = UDim2.new(0.677662015, 0, 0.0800794959, 0)
TextButton_5.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_5.AutoButtonColor = false
TextButton_5.Font = Enum.Font.Gotham
TextButton_5.Text = "Troll Skybox"
TextButton_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_5.TextScaled = true
TextButton_5.TextSize = 35.000
TextButton_5.TextWrapped = true

UICorner_7.CornerRadius = UDim.new(0, 3)
UICorner_7.Parent = TextButton_5

TextButton_6.Parent = ScrollingFrame
TextButton_6.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_6.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_6.BorderSizePixel = 0
TextButton_6.Position = UDim2.new(0.0168539267, 0, 0.0790647268, 0)
TextButton_6.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_6.AutoButtonColor = false
TextButton_6.Font = Enum.Font.Gotham
TextButton_6.Text = "Down Skybox"
TextButton_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_6.TextScaled = true
TextButton_6.TextSize = 35.000
TextButton_6.TextWrapped = true

UICorner_8.CornerRadius = UDim.new(0, 3)
UICorner_8.Parent = TextButton_6

TextButton_7.Parent = ScrollingFrame
TextButton_7.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_7.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_7.BorderSizePixel = 0
TextButton_7.Position = UDim2.new(0.676372111, 0, 0.348503888, 0)
TextButton_7.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_7.AutoButtonColor = false
TextButton_7.Font = Enum.Font.Gotham
TextButton_7.Text = "idk"
TextButton_7.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_7.TextScaled = true
TextButton_7.TextSize = 35.000
TextButton_7.TextWrapped = true

UICorner_9.CornerRadius = UDim.new(0, 3)
UICorner_9.Parent = TextButton_7

TextButton_8.Parent = ScrollingFrame
TextButton_8.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_8.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_8.BorderSizePixel = 0
TextButton_8.Position = UDim2.new(0.349190146, 0, 0.161567882, 0)
TextButton_8.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_8.AutoButtonColor = false
TextButton_8.Font = Enum.Font.Gotham
TextButton_8.Text = "Furry Spam"
TextButton_8.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_8.TextScaled = true
TextButton_8.TextSize = 35.000
TextButton_8.TextWrapped = true

UICorner_10.CornerRadius = UDim.new(0, 3)
UICorner_10.Parent = TextButton_8

TextLabel_5.Parent = ScrollingFrame
TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.15457505, 0, 0.12878637, 0)
TextLabel_5.Size = UDim2.new(0.124489389, 0, 0.0240595974, 0)
TextLabel_5.Font = Enum.Font.Roboto
TextLabel_5.Text = "Spam"
TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.TextScaled = true
TextLabel_5.TextSize = 43.000
TextLabel_5.TextWrapped = true

TextButton_9.Parent = ScrollingFrame
TextButton_9.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_9.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_9.BorderSizePixel = 0
TextButton_9.Position = UDim2.new(0.676373899, 0, 0.161567882, 0)
TextButton_9.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_9.AutoButtonColor = false
TextButton_9.Font = Enum.Font.Gotham
TextButton_9.Text = "Logo Spam"
TextButton_9.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_9.TextScaled = true
TextButton_9.TextSize = 35.000
TextButton_9.TextWrapped = true

UICorner_11.CornerRadius = UDim.new(0, 3)
UICorner_11.Parent = TextButton_9

_1.Name = "1"
_1.Parent = ScrollingFrame
_1.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
_1.BorderColor3 = Color3.fromRGB(255, 0, 0)
_1.BorderSizePixel = 0
_1.Position = UDim2.new(0.0168539267, 0, 0.216441542, 0)
_1.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
_1.AutoButtonColor = false
_1.Font = Enum.Font.Gotham
_1.Text = "Down Spam"
_1.TextColor3 = Color3.fromRGB(255, 255, 255)
_1.TextScaled = true
_1.TextSize = 35.000
_1.TextWrapped = true

UICorner_12.CornerRadius = UDim.new(0, 3)
UICorner_12.Parent = _1

TextButton_10.Parent = ScrollingFrame
TextButton_10.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_10.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_10.BorderSizePixel = 0
TextButton_10.Position = UDim2.new(0.349190146, 0, 0.216009364, 0)
TextButton_10.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_10.AutoButtonColor = false
TextButton_10.Font = Enum.Font.Gotham
TextButton_10.Text = "Furry Bypassed 2 Spam"
TextButton_10.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_10.TextScaled = true
TextButton_10.TextSize = 35.000
TextButton_10.TextWrapped = true

UICorner_13.CornerRadius = UDim.new(0, 3)
UICorner_13.Parent = TextButton_10

TextButton_11.Parent = ScrollingFrame
TextButton_11.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_11.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_11.BorderSizePixel = 0
TextButton_11.Position = UDim2.new(0.675085783, 0, 0.216009364, 0)
TextButton_11.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_11.AutoButtonColor = false
TextButton_11.Font = Enum.Font.Gotham
TextButton_11.Text = "Troll Spam"
TextButton_11.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_11.TextScaled = true
TextButton_11.TextSize = 35.000
TextButton_11.TextWrapped = true

UICorner_14.CornerRadius = UDim.new(0, 3)
UICorner_14.Parent = TextButton_11

TextLabel_6.Parent = ScrollingFrame
TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.BackgroundTransparency = 1.000
TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.BorderSizePixel = 0
TextLabel_6.Position = UDim2.new(0.0155031793, 0, 0.291989386, 0)
TextLabel_6.Size = UDim2.new(0.436875671, 0, -0.0306964666, 0)
TextLabel_6.Font = Enum.Font.Roboto
TextLabel_6.Text = "Fe HD admin Music"
TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.TextScaled = true
TextLabel_6.TextSize = 43.000
TextLabel_6.TextWrapped = true

TextLabel_7.Parent = ScrollingFrame
TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.BackgroundTransparency = 1.000
TextLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_7.BorderSizePixel = 0
TextLabel_7.Position = UDim2.new(-0.00920935161, 0, 0.347976059, 0)
TextLabel_7.Size = UDim2.new(1.01073074, 0, -0.0228402484, 0)
TextLabel_7.Font = Enum.Font.Roboto
TextLabel_7.Text = "Note: put some value on volume and pitch or else it wont work"
TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.TextScaled = true
TextLabel_7.TextSize = 43.000
TextLabel_7.TextWrapped = true

TextButton_12.Parent = ScrollingFrame
TextButton_12.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_12.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_12.BorderSizePixel = 0
TextButton_12.Position = UDim2.new(0.0194301754, 0, 0.294338137, 0)
TextButton_12.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_12.AutoButtonColor = false
TextButton_12.Font = Enum.Font.Gotham
TextButton_12.Text = "cringe (pitch 0.3 for scary and pitch 1.3 for more cringe)"
TextButton_12.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_12.TextScaled = true
TextButton_12.TextSize = 35.000
TextButton_12.TextWrapped = true

UICorner_15.CornerRadius = UDim.new(0, 3)
UICorner_15.Parent = TextButton_12

TextButton_13.Parent = ScrollingFrame
TextButton_13.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_13.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_13.BorderSizePixel = 0
TextButton_13.Position = UDim2.new(0.34790203, 0, 0.294233322, 0)
TextButton_13.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_13.AutoButtonColor = false
TextButton_13.Font = Enum.Font.Gotham
TextButton_13.Text = "green person music"
TextButton_13.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_13.TextScaled = true
TextButton_13.TextSize = 35.000
TextButton_13.TextWrapped = true

UICorner_16.CornerRadius = UDim.new(0, 3)
UICorner_16.Parent = TextButton_13

TextButton_14.Parent = ScrollingFrame
TextButton_14.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_14.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_14.BorderSizePixel = 0
TextButton_14.Position = UDim2.new(0.677662015, 0, 0.294233322, 0)
TextButton_14.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_14.AutoButtonColor = false
TextButton_14.Font = Enum.Font.Gotham
TextButton_14.Text = "Won't Stop Us C"
TextButton_14.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_14.TextScaled = true
TextButton_14.TextSize = 35.000
TextButton_14.TextWrapped = true

UICorner_17.CornerRadius = UDim.new(0, 3)
UICorner_17.Parent = TextButton_14

Box.Name = "Box"
Box.Parent = ScrollingFrame
Box.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Box.BorderColor3 = Color3.fromRGB(255, 0, 0)
Box.BorderSizePixel = 0
Box.Position = UDim2.new(0.479182273, 0, 0.26526168, 0)
Box.Size = UDim2.new(0.171568677, 0, 0.0174302645, 0)
Box.Font = Enum.Font.SourceSans
Box.PlaceholderText = "Volume here"
Box.Text = ""
Box.TextColor3 = Color3.fromRGB(255, 255, 255)
Box.TextScaled = true
Box.TextSize = 28.000
Box.TextWrapped = true

UICorner_18.CornerRadius = UDim.new(0, 3)
UICorner_18.Parent = Box

TextButton_15.Parent = ScrollingFrame
TextButton_15.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_15.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_15.BorderSizePixel = 0
TextButton_15.Position = UDim2.new(0.0172148142, 0, 0.450870723, 0)
TextButton_15.Size = UDim2.new(0.279879183, 0, 0.016026549, 0)
TextButton_15.AutoButtonColor = false
TextButton_15.Font = Enum.Font.Gotham
TextButton_15.Text = "Stop Music"
TextButton_15.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_15.TextScaled = true
TextButton_15.TextSize = 35.000
TextButton_15.TextWrapped = true

UIAspectRatioConstraint_5.Parent = TextButton_15
UIAspectRatioConstraint_5.AspectRatio = 6.847

UICorner_19.CornerRadius = UDim.new(0, 3)
UICorner_19.Parent = TextButton_15

TextButton_16.Parent = ScrollingFrame
TextButton_16.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_16.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_16.BorderSizePixel = 0
TextButton_16.Position = UDim2.new(0.0181403868, 0, 0.349027991, 0)
TextButton_16.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_16.AutoButtonColor = false
TextButton_16.Font = Enum.Font.Gotham
TextButton_16.Text = "Can you feel"
TextButton_16.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_16.TextScaled = true
TextButton_16.TextSize = 35.000
TextButton_16.TextWrapped = true

UICorner_20.CornerRadius = UDim.new(0, 3)
UICorner_20.Parent = TextButton_16

TextButton_17.Parent = ScrollingFrame
TextButton_17.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_17.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_17.BorderSizePixel = 0
TextButton_17.Position = UDim2.new(0.346612275, 0, 0.348503888, 0)
TextButton_17.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_17.AutoButtonColor = false
TextButton_17.Font = Enum.Font.Gotham
TextButton_17.Text = "Robotic"
TextButton_17.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_17.TextScaled = true
TextButton_17.TextSize = 35.000
TextButton_17.TextWrapped = true

UICorner_21.CornerRadius = UDim.new(0, 3)
UICorner_21.Parent = TextButton_17

TextLabel_8.Parent = ScrollingFrame
TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.BackgroundTransparency = 1.000
TextLabel_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_8.BorderSizePixel = 0
TextLabel_8.Position = UDim2.new(0.0181882679, 0, 0.490655482, 0)
TextLabel_8.Size = UDim2.new(0.352974772, 0, -0.0288934112, 0)
TextLabel_8.Font = Enum.Font.Roboto
TextLabel_8.Text = "destruction"
TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.TextScaled = true
TextLabel_8.TextSize = 43.000
TextLabel_8.TextWrapped = true

TextButton_18.Parent = ScrollingFrame
TextButton_18.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_18.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_18.BorderSizePixel = 0
TextButton_18.Position = UDim2.new(0.0181404147, 0, 0.499964535, 0)
TextButton_18.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_18.AutoButtonColor = false
TextButton_18.Font = Enum.Font.Gotham
TextButton_18.Text = "Fire all"
TextButton_18.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_18.TextScaled = true
TextButton_18.TextSize = 35.000
TextButton_18.TextWrapped = true

UICorner_22.CornerRadius = UDim.new(0, 3)
UICorner_22.Parent = TextButton_18

TextButton_19.Parent = ScrollingFrame
TextButton_19.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_19.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_19.BorderSizePixel = 0
TextButton_19.Position = UDim2.new(0.354667395, 0, 0.500135064, 0)
TextButton_19.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_19.AutoButtonColor = false
TextButton_19.Font = Enum.Font.Gotham
TextButton_19.Text = "Baseplate"
TextButton_19.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_19.TextScaled = true
TextButton_19.TextSize = 35.000
TextButton_19.TextWrapped = true

UICorner_23.CornerRadius = UDim.new(0, 3)
UICorner_23.Parent = TextButton_19

TextButton_20.Parent = ScrollingFrame
TextButton_20.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_20.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_20.BorderSizePixel = 0
TextButton_20.Position = UDim2.new(0.675073087, 0, 0.498515874, 0)
TextButton_20.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_20.AutoButtonColor = false
TextButton_20.Font = Enum.Font.Gotham
TextButton_20.Text = "Kill all"
TextButton_20.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_20.TextScaled = true
TextButton_20.TextSize = 35.000
TextButton_20.TextWrapped = true

UICorner_24.CornerRadius = UDim.new(0, 3)
UICorner_24.Parent = TextButton_20

TextButton_21.Parent = ScrollingFrame
TextButton_21.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_21.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_21.BorderSizePixel = 0
TextButton_21.Position = UDim2.new(0.0191781092, 0, 0.746543884, 0)
TextButton_21.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_21.AutoButtonColor = false
TextButton_21.Font = Enum.Font.Gotham
TextButton_21.Text = "Team Create (1 time)"
TextButton_21.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_21.TextScaled = true
TextButton_21.TextSize = 35.000
TextButton_21.TextWrapped = true

UICorner_25.CornerRadius = UDim.new(0, 3)
UICorner_25.Parent = TextButton_21

TextButton_22.Parent = ScrollingFrame
TextButton_22.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_22.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_22.BorderSizePixel = 0
TextButton_22.Position = UDim2.new(0.0181404147, 0, 0.548672915, 0)
TextButton_22.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_22.AutoButtonColor = false
TextButton_22.Font = Enum.Font.Gotham
TextButton_22.Text = "Unanchor"
TextButton_22.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_22.TextScaled = true
TextButton_22.TextSize = 35.000
TextButton_22.TextWrapped = true

UICorner_26.CornerRadius = UDim.new(0, 3)
UICorner_26.Parent = TextButton_22

TextButton_23.Parent = ScrollingFrame
TextButton_23.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_23.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_23.BorderSizePixel = 0
TextButton_23.Position = UDim2.new(0.366706461, 0, 0.549604535, 0)
TextButton_23.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_23.AutoButtonColor = false
TextButton_23.Font = Enum.Font.Gotham
TextButton_23.Text = "Luigi rain"
TextButton_23.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_23.TextScaled = true
TextButton_23.TextSize = 35.000
TextButton_23.TextWrapped = true

UICorner_27.CornerRadius = UDim.new(0, 3)
UICorner_27.Parent = TextButton_23

TextButton_24.Parent = ScrollingFrame
TextButton_24.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_24.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_24.BorderSizePixel = 0
TextButton_24.Position = UDim2.new(0.689797163, 0, 0.552289546, 0)
TextButton_24.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_24.AutoButtonColor = false
TextButton_24.Font = Enum.Font.Gotham
TextButton_24.Text = "Thomas"
TextButton_24.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_24.TextScaled = true
TextButton_24.TextSize = 35.000
TextButton_24.TextWrapped = true

UICorner_28.CornerRadius = UDim.new(0, 3)
UICorner_28.Parent = TextButton_24

TextButton_25.Parent = ScrollingFrame
TextButton_25.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_25.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_25.BorderSizePixel = 0
TextButton_25.Position = UDim2.new(0.0168539267, 0, 0.160979107, 0)
TextButton_25.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_25.AutoButtonColor = false
TextButton_25.Font = Enum.Font.Gotham
TextButton_25.Text = "Furry Bypassed Spam"
TextButton_25.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_25.TextScaled = true
TextButton_25.TextSize = 35.000
TextButton_25.TextWrapped = true

UICorner_29.CornerRadius = UDim.new(0, 3)
UICorner_29.Parent = TextButton_25

TextButton_26.Parent = ScrollingFrame
TextButton_26.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_26.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_26.BorderSizePixel = 0
TextButton_26.Position = UDim2.new(0.366706461, 0, 0.594455659, 0)
TextButton_26.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_26.AutoButtonColor = false
TextButton_26.Font = Enum.Font.Gotham
TextButton_26.Text = "Name all F3xploit"
TextButton_26.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_26.TextScaled = true
TextButton_26.TextSize = 35.000
TextButton_26.TextWrapped = true

UICorner_30.CornerRadius = UDim.new(0, 3)
UICorner_30.Parent = TextButton_26

TextButton_27.Parent = ScrollingFrame
TextButton_27.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_27.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_27.BorderSizePixel = 0
TextButton_27.Position = UDim2.new(0.689797163, 0, 0.594068825, 0)
TextButton_27.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_27.AutoButtonColor = false
TextButton_27.Font = Enum.Font.Gotham
TextButton_27.Text = "Name all kid lol"
TextButton_27.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_27.TextScaled = true
TextButton_27.TextSize = 35.000
TextButton_27.TextWrapped = true

UICorner_31.CornerRadius = UDim.new(0, 3)
UICorner_31.Parent = TextButton_27

TextButton_28.Parent = ScrollingFrame
TextButton_28.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_28.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_28.BorderSizePixel = 0
TextButton_28.Position = UDim2.new(0.0191789288, 0, 0.641411245, 0)
TextButton_28.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_28.AutoButtonColor = false
TextButton_28.Font = Enum.Font.Gotham
TextButton_28.Text = "Custom Name all"
TextButton_28.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_28.TextScaled = true
TextButton_28.TextSize = 35.000
TextButton_28.TextWrapped = true

UICorner_32.CornerRadius = UDim.new(0, 3)
UICorner_32.Parent = TextButton_28

Namee.Name = "Namee"
Namee.Parent = ScrollingFrame
Namee.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Namee.BorderColor3 = Color3.fromRGB(255, 0, 0)
Namee.BorderSizePixel = 0
Namee.Position = UDim2.new(0.346861422, 0, 0.640640438, 0)
Namee.Size = UDim2.new(0.615402699, 0, 0.0385793932, 0)
Namee.Font = Enum.Font.SourceSans
Namee.PlaceholderText = "Name here"
Namee.Text = ""
Namee.TextColor3 = Color3.fromRGB(255, 255, 255)
Namee.TextScaled = true
Namee.TextSize = 28.000
Namee.TextWrapped = true

UICorner_33.CornerRadius = UDim.new(0, 3)
UICorner_33.Parent = Namee

TextButton_29.Parent = ScrollingFrame
TextButton_29.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_29.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_29.BorderSizePixel = 0
TextButton_29.Position = UDim2.new(0.0181404147, 0, 0.687279999, 0)
TextButton_29.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_29.AutoButtonColor = false
TextButton_29.Font = Enum.Font.Gotham
TextButton_29.Text = "Kick all (fe with HD admin)"
TextButton_29.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_29.TextScaled = true
TextButton_29.TextSize = 35.000
TextButton_29.TextWrapped = true

UICorner_34.CornerRadius = UDim.new(0, 3)
UICorner_34.Parent = TextButton_29

TextButton_30.Parent = ScrollingFrame
TextButton_30.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_30.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_30.BorderSizePixel = 0
TextButton_30.Position = UDim2.new(0.354667395, 0, 0.68841809, 0)
TextButton_30.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_30.AutoButtonColor = false
TextButton_30.Font = Enum.Font.Gotham
TextButton_30.Text = "Sword (HD admin)"
TextButton_30.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_30.TextScaled = true
TextButton_30.TextSize = 35.000
TextButton_30.TextWrapped = true

UICorner_35.CornerRadius = UDim.new(0, 3)
UICorner_35.Parent = TextButton_30

TextButton_31.Parent = ScrollingFrame
TextButton_31.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_31.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_31.BorderSizePixel = 0
TextButton_31.Position = UDim2.new(0.676371992, 0, 0.687805891, 0)
TextButton_31.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_31.AutoButtonColor = false
TextButton_31.Font = Enum.Font.Gotham
TextButton_31.Text = "Fling all (HD admin)"
TextButton_31.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_31.TextScaled = true
TextButton_31.TextSize = 35.000
TextButton_31.TextWrapped = true

UICorner_36.CornerRadius = UDim.new(0, 3)
UICorner_36.Parent = TextButton_31

Pitch.Name = "Pitch"
Pitch.Parent = ScrollingFrame
Pitch.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
Pitch.BorderColor3 = Color3.fromRGB(255, 0, 0)
Pitch.BorderSizePixel = 0
Pitch.Position = UDim2.new(0.698995233, 0, 0.26517415, 0)
Pitch.Size = UDim2.new(0.171568677, 0, 0.0174302645, 0)
Pitch.Font = Enum.Font.SourceSans
Pitch.PlaceholderText = "Pitch here"
Pitch.Text = ""
Pitch.TextColor3 = Color3.fromRGB(255, 255, 255)
Pitch.TextScaled = true
Pitch.TextSize = 28.000
Pitch.TextWrapped = true

UICorner_37.CornerRadius = UDim.new(0, 3)
UICorner_37.Parent = Pitch

TextButton_32.Parent = ScrollingFrame
TextButton_32.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_32.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_32.BorderSizePixel = 0
TextButton_32.Position = UDim2.new(0.0155657902, 0, 0.0294491556, 0)
TextButton_32.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_32.AutoButtonColor = false
TextButton_32.Font = Enum.Font.Gotham
TextButton_32.Text = "Null Skybox"
TextButton_32.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_32.TextScaled = true
TextButton_32.TextSize = 35.000
TextButton_32.TextWrapped = true

UICorner_38.CornerRadius = UDim.new(0, 3)
UICorner_38.Parent = TextButton_32

team.Name = "team"
team.Parent = ScrollingFrame
team.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
team.BorderColor3 = Color3.fromRGB(255, 0, 0)
team.BorderSizePixel = 0
team.Position = UDim2.new(0.354917169, 0, 0.747861981, 0)
team.Size = UDim2.new(0.615402699, 0, 0.0385793932, 0)
team.Font = Enum.Font.SourceSans
team.PlaceholderText = "Team Name here"
team.Text = ""
team.TextColor3 = Color3.fromRGB(255, 255, 255)
team.TextScaled = true
team.TextSize = 28.000
team.TextWrapped = true

UICorner_39.CornerRadius = UDim.new(0, 3)
UICorner_39.Parent = team

TextButton_33.Parent = ScrollingFrame
TextButton_33.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_33.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_33.BorderSizePixel = 0
TextButton_33.Position = UDim2.new(0.0181404147, 0, 0.406489849, 0)
TextButton_33.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_33.AutoButtonColor = false
TextButton_33.Font = Enum.Font.Gotham
TextButton_33.Text = "Arabic Person"
TextButton_33.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_33.TextScaled = true
TextButton_33.TextSize = 35.000
TextButton_33.TextWrapped = true

UICorner_40.CornerRadius = UDim.new(0, 3)
UICorner_40.Parent = TextButton_33

TextButton_34.Parent = ScrollingFrame
TextButton_34.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_34.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_34.BorderSizePixel = 0
TextButton_34.Position = UDim2.new(0.353769004, 0, 0.404954553, 0)
TextButton_34.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_34.AutoButtonColor = false
TextButton_34.Font = Enum.Font.Gotham
TextButton_34.Text = "Spooky Scary Skeletons Remix"
TextButton_34.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_34.TextScaled = true
TextButton_34.TextSize = 35.000
TextButton_34.TextWrapped = true

UICorner_41.CornerRadius = UDim.new(0, 3)
UICorner_41.Parent = TextButton_34

TextButton_35.Parent = ScrollingFrame
TextButton_35.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
TextButton_35.BorderColor3 = Color3.fromRGB(255, 0, 0)
TextButton_35.BorderSizePixel = 0
TextButton_35.Position = UDim2.new(0.673287451, 0, 0.406392515, 0)
TextButton_35.Size = UDim2.new(0.279879183, 0, 0.0337520987, 0)
TextButton_35.AutoButtonColor = false
TextButton_35.Font = Enum.Font.Gotham
TextButton_35.Text = "AH"
TextButton_35.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_35.TextScaled = true
TextButton_35.TextSize = 35.000
TextButton_35.TextWrapped = true

UICorner_42.CornerRadius = UDim.new(0, 3)
UICorner_42.Parent = TextButton_35

TextLabel_9.Parent = Main
TextLabel_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_9.BackgroundTransparency = 1.000
TextLabel_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_9.BorderSizePixel = 0
TextLabel_9.Position = UDim2.new(0.0212984458, 0, 0.0253485385, 0)
TextLabel_9.Size = UDim2.new(0.170305625, 0, 0.0805067793, 0)
TextLabel_9.Font = Enum.Font.Roboto
TextLabel_9.Text = "F3xploit"
TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_9.TextScaled = true
TextLabel_9.TextSize = 43.000
TextLabel_9.TextWrapped = true
TextLabel_9.TextXAlignment = Enum.TextXAlignment.Left

UICorner_43.CornerRadius = UDim.new(0, 3)
UICorner_43.Parent = Main

UIStroke_3.Parent = Main
UIStroke_3.Color = Color3.fromRGB(185, 0, 0)
UIStroke_3.Thickness = 1.500
UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

TextButton_36.Parent = Main
TextButton_36.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_36.BackgroundTransparency = 1.000
TextButton_36.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_36.BorderSizePixel = 0
TextButton_36.Position = UDim2.new(0.888782918, 0, 0.00548759103, 0)
TextButton_36.Size = UDim2.new(0.0931632072, 0, 0.129341379, 0)
TextButton_36.Font = Enum.Font.Roboto
TextButton_36.Text = "Close"
TextButton_36.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton_36.TextScaled = true
TextButton_36.TextSize = 14.000
TextButton_36.TextWrapped = true

TextLabel_10.Parent = Main
TextLabel_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_10.BackgroundTransparency = 1.000
TextLabel_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_10.BorderSizePixel = 0
TextLabel_10.Position = UDim2.new(0.191604048, 0, 0.0253485627, 0)
TextLabel_10.Size = UDim2.new(0.324596375, 0, 0.0805067793, 0)
TextLabel_10.Font = Enum.Font.Roboto
TextLabel_10.Text = "V2 "
TextLabel_10.TextColor3 = Color3.fromRGB(185, 0, 0)
TextLabel_10.TextScaled = true
TextLabel_10.TextSize = 43.000
TextLabel_10.TextWrapped = true
TextLabel_10.TextXAlignment = Enum.TextXAlignment.Left

-- Scripts:

local function MUBG_script() -- Btools.e 
	local script = Instance.new('LocalScript', Btools)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";buildingTools"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(MUBG_script)()
local function PGVUAWY_script() -- Btools.LocalScript 
	local script = Instance.new('LocalScript', Btools)

	local ro = script.Parent
	local TweenService = game:GetService("TweenService")
	
	wait(5)
	ro:TweenPosition(UDim2.new(0.006, 0,0.67, 0), "Out", "Sine", 1.1, false)
end
coroutine.wrap(PGVUAWY_script)()
local function MFIENDU_script() -- ImageLabel_2.Spin 
	local script = Instance.new('LocalScript', ImageLabel_2)

	counter = 0
	while true do
		counter = counter + 0.6
		wait()
		script.Parent.Rotation = counter
	end
end
coroutine.wrap(MFIENDU_script)()
local function FDHKG_script() -- F3x.LocalScript 
	local script = Instance.new('LocalScript', F3x)

	local ro = script.Parent.Logo
	local TweenService = game:GetService("TweenService")
	
	wait(1)
	ro:TweenPosition(UDim2.new(0.458, 0, 0.408, 0), "Out", "Sine", 0.9, false)
	wait(3)
	ro:TweenPosition(UDim2.new(0.006, 0,0.81, 0), "Out", "Sine", 1.1, false)
end
coroutine.wrap(FDHKG_script)()
local function CJAMTRX_script() -- Open.LocalScript 
	local script = Instance.new('LocalScript', Open)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Main.Visible = true
	end)
end
coroutine.wrap(CJAMTRX_script)()
local function VYRZR_script() -- Open.LocalScript 
	local script = Instance.new('LocalScript', Open)

	local ro = script.Parent
	local TweenService = game:GetService("TweenService")
	
	wait(5)
	ro:TweenPosition(UDim2.new(0.006, 0,0.603, 0), "Out", "Sine", 1.1, false)
end
coroutine.wrap(VYRZR_script)()
local function UGFRDX_script() -- TextLabel.LocalScript 
	local script = Instance.new('LocalScript', TextLabel)

	local text = script.Parent
	local add = 10
	wait(1)
	local k = 1
	while k <= 255 do
		text.TextColor3 = Color3.new(0, 0, 0)
		k = k + add
		wait()
	end
	while true do
		k = 1
		while k <= 255 do
			text.TextColor3 = Color3.new(0.00392157, 0, 0)
			k = k + add
			wait()
		end
		k = 1
		while k <= 255 do
			text.TextColor3 = Color3.new(0.796078, 0, 0)
			k = k + add
			wait()
		end
	end
end
coroutine.wrap(UGFRDX_script)()
local function NZFA_script() -- TextLabel.LocalScript 
	local script = Instance.new('LocalScript', TextLabel)

	local ro = script.Parent
	local TweenService = game:GetService("TweenService")
	
	wait(5)
	ro:TweenPosition(UDim2.new(0.118, 0,0.867, 0), "Out", "Sine", 1.1, false)
end
coroutine.wrap(NZFA_script)()
local function MVUAA_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("18582338072")
	
	end)
end
coroutine.wrap(MVUAA_script)()
local function ULCVKYS_script() -- TextButton_2.LocalScript 
	local script = Instance.new('LocalScript', TextButton_2)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("18582521802")
	
	end)
end
coroutine.wrap(ULCVKYS_script)()
local function MFTG_script() -- TextButton_3.e 
	local script = Instance.new('LocalScript', TextButton_3)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";name all got destroyed lol"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(MFTG_script)()
local function KSNQBS_script() -- TextButton_4.LocalScript 
	local script = Instance.new('LocalScript', TextButton_4)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("228322900")
	
	end)
end
coroutine.wrap(KSNQBS_script)()
local function XSIKDS_script() -- TextButton_5.LocalScript 
	local script = Instance.new('LocalScript', TextButton_5)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("14008122885")
	
	end)
end
coroutine.wrap(XSIKDS_script)()
local function AOXU_script() -- TextButton_6.LocalScript 
	local script = Instance.new('LocalScript', TextButton_6)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("2577916730")
	
	end)
end
coroutine.wrap(AOXU_script)()
local function UXAYTW_script() -- TextButton_7.e 
	local script = Instance.new('LocalScript', TextButton_7)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 15689447272 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(UXAYTW_script)()
local function NOJGDF_script() -- TextButton_8.LocalScript 
	local script = Instance.new('LocalScript', TextButton_8)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("18582521802")
	
	end)
end
coroutine.wrap(NOJGDF_script)()
local function FWSEUFH_script() -- TextButton_9.LocalScript 
	local script = Instance.new('LocalScript', TextButton_9)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("18582338072")
	
	end)
end
coroutine.wrap(FWSEUFH_script)()
local function DGWBK_script() -- _1.LocalScript 
	local script = Instance.new('LocalScript', _1)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("2577916730")
	
	end)
end
coroutine.wrap(DGWBK_script)()
local function CWERFN_script() -- TextButton_10.LocalScript 
	local script = Instance.new('LocalScript', TextButton_10)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("127903246953472")
	
	end)
end
coroutine.wrap(CWERFN_script)()
local function LXKXG_script() -- TextButton_11.LocalScript 
	local script = Instance.new('LocalScript', TextButton_11)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("14008122885")
	
	end)
end
coroutine.wrap(LXKXG_script)()
local function KSHU_script() -- TextButton_12.e 
	local script = Instance.new('LocalScript', TextButton_12)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 9245559862 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(KSHU_script)()
local function MYSOLVJ_script() -- TextButton_13.e 
	local script = Instance.new('LocalScript', TextButton_13)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 1839246711 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(MYSOLVJ_script)()
local function YCAAR_script() -- TextButton_14.e 
	local script = Instance.new('LocalScript', TextButton_14)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 1847661821 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(YCAAR_script)()
local function XJJJTA_script() -- TextButton_15.e 
	local script = Instance.new('LocalScript', TextButton_15)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";unmusic"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(XJJJTA_script)()
local function WBSZC_script() -- TextButton_16.e 
	local script = Instance.new('LocalScript', TextButton_16)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 15689448519 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(WBSZC_script)()
local function FUNFJJO_script() -- TextButton_17.e 
	local script = Instance.new('LocalScript', TextButton_17)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 1839448528 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(FUNFJJO_script)()
local function TKUCGST_script() -- TextButton_18.e 
	local script = Instance.new('LocalScript', TextButton_18)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function AddFire(part)
			local args = {
				[1] = "CreateDecorations",
				[2] = {
					[1] = {
						["Part"] = part,
						["DecorationType"] = "Fire"
					}
				}
			}
			_(args)
		end
		function FireParts()
			for i,v in game.Workspace:GetDescendants() do
				spawn(function()
					SetLocked(v,false)
					AddFire(v)
				end)
			end
		end
		FireParts()
	end)
end
coroutine.wrap(TKUCGST_script)()
local function SVTN_script() -- TextButton_19.e 
	local script = Instance.new('LocalScript', TextButton_19)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent,types)
			local args = {
				[1] = "CreatePart",
				[2] = types,
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
	
		function Material(part,mate)
	
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Material"] = mate
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		hrpx = math.floor(char.HumanoidRootPart.CFrame.x)
		hrpz = math.floor(char.HumanoidRootPart.CFrame.z)
		hrpy = math.floor(char.HumanoidRootPart.CFrame.y)
		function SpawnBasePlate()
			CreatePart(CFrame.new(hrpx,hrpy-20,hrpz),workspace,"Spawn")
			for i,v in game.Workspace:GetChildren() do
				if v:IsA("BasePart") and v.CFrame.y == hrpy - 20 and v.CFrame.x == hrpx then
					spawn(function()
						Resize(v,Vector3.new(1000,2,1000),CFrame.new(hrpx,hrpy-20,hrpz))
						Material(v,Enum.Material.Grass)
						Color(v,Color3.fromRGB(25,100,25))
						while wait(1) do
							pcall(function()SetLocked(v,true)end)
						end
					end)
				end
			end
		end
		SpawnBasePlate()
	end)
end
coroutine.wrap(SVTN_script)()
local function ZZWKUNH_script() -- TextButton_20.e 
	local script = Instance.new('LocalScript', TextButton_20)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
	
		function KillAll()
			for i,v in game.Players:GetPlayers() do
				spawn(function()
					SetLocked(v.Character.Head,false)
					DestroyPart(v.Character.Head)
				end)
			end
		end
		KillAll()
	end)
end
coroutine.wrap(ZZWKUNH_script)()
local function EMHQTYF_script() -- TextButton_21.e 
	local script = Instance.new('LocalScript', TextButton_21)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local name = script.Parent.Parent.team
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";createTeam aa"..name.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(EMHQTYF_script)()
local function ZMADN_script() -- TextButton_22.e 
	local script = Instance.new('LocalScript', TextButton_22)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
	
		function Unanchor()
			for i,v in game.Workspace:GetDescendants() do
				spawn(function()
					SetLocked(v,false)
					SetAnchor(false,v)
				end)
			end
		end
		Unanchor()
	end)
	
end
coroutine.wrap(ZMADN_script)()
local function ANQLSP_script() -- TextButton_23.e 
	local script = Instance.new('LocalScript', TextButton_23)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = workspace
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = workspace.Part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		hrpcf = player.Character.HumanoidRootPart.CFrame
		while wait(0.5) do
			x = hrpcf.x
			z = hrpcf.z
			randint = math.random(-600,600)
			randint2 = math.random(-600,600)
			xloc = randint + x
			zloc = randint2 + z
			cf = player.Character.HumanoidRootPart.CFrame.y + 400
			spawn(function()
				CreatePart(CFrame.new(math.floor(xloc), math.random(cf,cf+400), math.floor(zloc)))
				for i,v in game.Workspace:GetDescendants() do
					if v.Name == "Part" and v.Parent == workspace and v.CFrame.x == math.floor(xloc) and v.CFrame.z == math.floor(zloc) then
						SetName(v,"b_1337")
						SetAnchor(false,v)
						AddMesh(v)
						Resize(v, Vector3.new(100,100,100),v.CFrame)
						MeshResize(v,Vector3.new(20,20,20))
						SetMesh(v,"1618237875")
						SetTexture(v, "1618237897")
						SetCollision(v,false)
					else
					end
				end
			end)
		end
	end)
	
end
coroutine.wrap(ANQLSP_script)()
local function ZUZZXU_script() -- TextButton_24.e 
	local script = Instance.new('LocalScript', TextButton_24)

	script.Parent.MouseButton1Click:Connect(function()--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = workspace.Part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Thomas(player)
			SetAnchor(true,char.HumanoidRootPart)
			CreatePart(char.HumanoidRootPart.CFrame,char)
			SetCollision(char.Part,false)
			SetLocked(char.Part,false)
			CreateSpotlight(char.Part)
			SyncLighting(char.Part,100)
			SetLocked(char.HumanoidRootPart,false)
			Weld(char.Part,char.HumanoidRootPart,char.Part)
			SetAnchor(false,char.Part)
			AddMesh(char.Part)
			MeshResize(char.Part,Vector3.new(3,3,3))
			SetMesh(char.Part,"4340968808")
			SetTexture(char.Part,"4340968918")
			SetAnchor(false,char.HumanoidRootPart)
			char.Humanoid.WalkSpeed = 100
			char.HumanoidRootPart.Touched:connect(function(obj)
				if obj.Parent:FindFirstChild("Humanoid") then
					SetLocked(obj.Parent.Head,false)
					DestroyPart(obj.Parent.Head)
				end
			end)
			game:GetService("RunService").RenderStepped:Connect(function()
				for i,v in char:GetDescendants() do
					if v:IsA("BasePart") then
						char.Humanoid.WalkSpeed = 100
						v.CanCollide = false
					end
				end
			end)
		end
		Thomas(player)
	end)
	
end
coroutine.wrap(ZUZZXU_script)()
local function FLQPCLS_script() -- TextButton_25.LocalScript 
	local script = Instance.new('LocalScript', TextButton_25)

	script.Parent.MouseButton1Click:Connect(function()
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = size
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		function SpawnDecal(part,side)
			local args = {
				[1] = "CreateTextures",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal"
					}
				}
			}
	
			_(args)
		end
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function spam(id)
			for i,v in game.workspace:GetDescendants() do
				if v:IsA("BasePart") then
					spawn(function()
						SetLocked(v,false)
						SpawnDecal(v,Enum.NormalId.Front)
						AddDecal(v,id,Enum.NormalId.Front)
	
						SpawnDecal(v,Enum.NormalId.Back)
						AddDecal(v,id,Enum.NormalId.Back)
	
						SpawnDecal(v,Enum.NormalId.Right)
						AddDecal(v,id,Enum.NormalId.Right)
	
						SpawnDecal(v,Enum.NormalId.Left)
						AddDecal(v,id,Enum.NormalId.Left)
	
						SpawnDecal(v,Enum.NormalId.Bottom)
						AddDecal(v,id,Enum.NormalId.Bottom)
	
						SpawnDecal(v,Enum.NormalId.Top)
						AddDecal(v,id,Enum.NormalId.Top)
					end)
				end
			end 
		end
		spam("108201958208739")
	
	end)
end
coroutine.wrap(FLQPCLS_script)()
local function BTCYCBV_script() -- TextButton_26.e 
	local script = Instance.new('LocalScript', TextButton_26)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";name all F3xploit"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(BTCYCBV_script)()
local function UIZPI_script() -- TextButton_27.e 
	local script = Instance.new('LocalScript', TextButton_27)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";name all kid lol"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(UIZPI_script)()
local function WWND_script() -- TextButton_28.e 
	local script = Instance.new('LocalScript', TextButton_28)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local name = script.Parent.Parent.Namee
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";name all "..name.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(WWND_script)()
local function IHHNOVY_script() -- TextButton_29.e 
	local script = Instance.new('LocalScript', TextButton_29)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";crash others"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(IHHNOVY_script)()
local function LCGOU_script() -- TextButton_30.e 
	local script = Instance.new('LocalScript', TextButton_30)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";sword me"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(LCGOU_script)()
local function SPXG_script() -- TextButton_31.e 
	local script = Instance.new('LocalScript', TextButton_31)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";fling others"
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(SPXG_script)()
local function OPSB_script() -- TextButton_32.LocalScript 
	local script = Instance.new('LocalScript', TextButton_32)

	script.Parent.MouseButton1Click:Connect(function()
		--rgrg
		local player = game.Players.LocalPlayer
		local char = player.Character
		local tool
		for i,v in player:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		for i,v in game.ReplicatedStorage:GetDescendants() do
			if v.Name == "SyncAPI" then
				tool = v.Parent
			end
		end
		--craaa
		remote = tool.SyncAPI.ServerEndpoint
		function _(args)
			remote:InvokeServer(unpack(args))
		end
		function SetCollision(part,boolean)
			local args = {
				[1] = "SyncCollision",
				[2] = {
					[1] = {
						["Part"] = part,
						["CanCollide"] = boolean
					}
				}
			}
			_(args)
		end
		function SetAnchor(boolean,part)
			local args = {
				[1] = "SyncAnchor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Anchored"] = boolean
					}
				}
			}
			_(args)
		end
		function CreatePart(cf,parent)
			local args = {
				[1] = "CreatePart",
				[2] = "Normal",
				[3] = cf,
				[4] = parent
			}
			_(args)
		end
		function DestroyPart(part)
			local args = {
				[1] = "Remove",
				[2] = {
					[1] = part
				}
			}
			_(args)
		end
		function MovePart(part,cf)
			local args = {
				[1] = "SyncMove",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf
					}
				}
			}
			_(args)
		end
		function Resize(part,size,cf)
			local args = {
				[1] = "SyncResize",
				[2] = {
					[1] = {
						["Part"] = part,
						["CFrame"] = cf,
						["Size"] = size
					}
				}
			}
			_(args)
		end
		function AddMesh(part)
			local args = {
				[1] = "CreateMeshes",
				[2] = {
					[1] = {
						["Part"] = part
					}
				}
			}
			_(args)
		end
	
		function SetMesh(part,meshid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["MeshId"] = "rbxassetid://"..meshid
					}
				}
			}
			_(args)
		end
		function SetTexture(part, texid)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["TextureId"] = "rbxassetid://"..texid
					}
				}
			}
			_(args)
		end
		function SetName(part, stringg)
			local args = {
				[1] = "SetName",
				[2] = {
					[1] = part
				},
				[3] = stringg
			}
	
			_(args)
		end
		function MeshResize(part,size)
			local args = {
				[1] = "SyncMesh",
				[2] = {
					[1] = {
						["Part"] = part,
						["Scale"] = "1000"
					}
				}
			}
			_(args)
		end
		function Weld(part1, part2,lead)
			local args = {
				[1] = "CreateWelds",
				[2] = {
					[1] = part1,
					[2] = part2
				},
				[3] = lead
			}
			_(args)
	
		end
		function SetLocked(part,boolean)
			local args = {
				[1] = "SetLocked",
				[2] = {
					[1] = part
				},
				[3] = boolean
			}
			_(args)
		end
		function SetTrans(part,int)
			local args = {
				[1] = "SyncMaterial",
				[2] = {
					[1] = {
						["Part"] = part,
						["Transparency"] = int
					}
				}
			}
			_(args)
		end
		function CreateSpotlight(part)
			local args = {
				[1] = "CreateLights",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight"
					}
				}
			}
			_(args)
		end
		function SyncLighting(part,brightness)
			local args = {
				[1] = "SyncLighting",
				[2] = {
					[1] = {
						["Part"] = part,
						["LightType"] = "SpotLight",
						["Brightness"] = brightness
					}
				}
			}
			_(args)
		end
		function Color(part,color)
			local args = {
				[1] = "SyncColor",
				[2] = {
					[1] = {
						["Part"] = part,
						["Color"] = color --[[Color3]],
						["UnionColoring"] = false
					}
				}
			}
			_(args)
		end
		
		function AddDecal(part,asset,side)
			local args = {
				[1] = "SyncTexture",
				[2] = {
					[1] = {
						["Part"] = part,
						["Face"] = side,
						["TextureType"] = "Decal",
						["Texture"] = "rbxassetid://".. asset
					}
				}
			}
			_(args)
		end
	
		function Sky(id)
			e = char.HumanoidRootPart.CFrame.x
			f = char.HumanoidRootPart.CFrame.y
			g = char.HumanoidRootPart.CFrame.z
			CreatePart(CFrame.new(math.floor(e),math.floor(f),math.floor(g)) + Vector3.new(0,6,0),workspace)
			for i,v in game.Workspace:GetDescendants() do
				if v:IsA("BasePart") and v.CFrame.x == math.floor(e) and v.CFrame.z == math.floor(g) then
					--spawn(function()
					SetName(v,"Sky")
					AddMesh(v)
					--end)
					--spawn(function()
					SetMesh(v,"8006679977")
					SetTexture(v,id)
					--end)
					MeshResize(v,Vector3.new(50,50,50))
					SetLocked(v,true)
				end
			end
		end
		Sky("18582951060")
	
	end)
end
coroutine.wrap(OPSB_script)()
local function UPIR_script() -- TextButton_33.e 
	local script = Instance.new('LocalScript', TextButton_33)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 1836685873 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(UPIR_script)()
local function AVJB_script() -- TextButton_34.e 
	local script = Instance.new('LocalScript', TextButton_34)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 15689450026 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(AVJB_script)()
local function ANKBQD_script() -- TextButton_35.e 
	local script = Instance.new('LocalScript', TextButton_35)

	local RunService = game:GetService("RunService")
	local TextChatService = game:GetService("TextChatService")
	local volume = script.Parent.Parent.Box
	local pitch = script.Parent.Parent.Pitch
	
	-- Referencia al jugador local
	local player = game:GetService("Players").LocalPlayer
	
	-- Creación del botón
	local button = script.Parent
	
	local function sendMessage()
		local message = ";music 1559006092 ;pitch " .. pitch.Text .. " ;volume "..volume.Text
	
		if TextChatService.ChatVersion == Enum.ChatVersion.LegacyChatService then
			local chatEvents = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
			if not chatEvents then
				error("Failed to obtain the DefaultChatSystemChatEvents folder.", 1)
			end
			local sayMessageRequest = chatEvents:FindFirstChild("SayMessageRequest")
			if not sayMessageRequest then
				error("Failed to obtain the SayMessageRequest event.", 1)
			end
			sayMessageRequest:FireServer(message, "All")
		else
			for _, channel in next, TextChatService.TextChannels:GetChildren() do
				if channel:FindFirstChild(player.Name) and channel.Name ~= 'RBXSystem' then
					channel:SendAsync(message)
					break
				end
			end
		end
	end
	
	-- Conexión del evento de clic del botón a la función sendMessage
	button.MouseButton1Click:Connect(sendMessage)
	
end
coroutine.wrap(ANKBQD_script)()
local function VJNGQH_script() -- TextButton_36.LocalScript 
	local script = Instance.new('LocalScript', TextButton_36)

	script.Parent.MouseButton1Click:Connect(function()
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(VJNGQH_script)()
local function RETPDSN_script() -- Main.Drag 
	local script = Instance.new('LocalScript', Main)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end
coroutine.wrap(RETPDSN_script)()
